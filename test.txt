Custom  {

	.construct Custom().V {

		invokespecial(this, "<init>").V;

		}

	.method public add(a.i32,b.i32).i32 {

		ti0.i32 :=.i32 $1.a.i32 +.i32 $2.b.i32;

		c.i32 :=.i32 ti0.i32 +.i32 $1.a.i32;

		ti1.i32 :=.i32 c.i32;

		ret.i32 ti1.i32;

		}

	.method public static main(args.array.String).V {

		a.i32 :=.i32 20.i32;

		b.i32 :=.i32 10.i32;

		Loop1:

		if ( b.i32 <.i32 a.i32) goto Body1;

		goto EndLoop1;

		Body1:

		b.i32 :=.i32 a.i32 +.i32 a.i32;

		Loop2:

		if ( 0.bool &&.bool 1.bool) goto Body2;

		goto EndLoop2;

		Body2:

		a.i32 :=.i32 b.i32;

		goto Loop2;

		EndLoop2:

		goto Loop1;

		EndLoop1:

		ret.V;

		}

	}

