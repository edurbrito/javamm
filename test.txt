Life  {

	.field private UNDERPOP_LIM.i32;

	.field private OVERPOP_LIM.i32;

	.field private REPRODUCE_NUM.i32;

	.field private LOOPS_PER_MS.i32;

	.field private xMax.i32;

	.field private yMax.i32;

	.field private field2.array.i32;

	.construct Life().V {

		invokespecial (this, "<init>").V;

		}

	.method public static main(a.array.String).V {

		ti0.Life :=.Life new (Life).Life;

		invokespecial (ti0.Life,"<init>").V;

		l.Life :=.Life ti0.Life;

		invokevirtual (l.Life,"init").bool;

		Loop1:

		if ( 1.bool &&.bool 1.bool) goto Body1;

		goto EndLoop1;

		Body1:

		invokevirtual (l.Life,"printfield2").bool;

		invokevirtual (l.Life,"update").bool;

		ti2.i32 :=.i32 invokestatic (io, "read").V;

		unused.i32 :=.i32 ti2.i32;

		goto Loop1;

		EndLoop1:

		ret.V;

		}

	.method public init().bool {

		lineLenA.array.i32 :=.array.i32 new(array, 1.i32).array.i32;

		ti5.array.i32 :=.array.i32  invokevirtual (this,"field2",lineLenA.array.i32).i32;

		ti6.array.i32 :=.array.i32 ti5.array.i32;

		ti7.i32 :=.i32 0.i32;

		ti8.i32 :=.i32 lineLenA[ti7.i32].i32;

		lineLen.i32 :=.i32 ti8.i32;

		ti10.i32 :=.i32 lineLen.i32 -.i32 1.i32;

		ti12.i32 :=.i32 arraylength(field2.array.i32).i32;

		ti13.i32 :=.i32 ti12.i32;

		ti14.i32 :=.i32 ti13.i32 /.i32 lineLen.i32;

		ti12.i32 :=.i32 arraylength(field2.array.i32).i32;

		ti13.i32 :=.i32 ti12.i32;

		ti14.i32 :=.i32 ti13.i32 /.i32 lineLen.i32;

		ti15.i32 :=.i32 ti14.i32 -.i32 1.i32;

		tb16.bool :=.bool 1.bool;

		ret.bool tb16.bool;

		}

	.method public field2(lineLen.array.i32).i32 {

		field2.array.i32 :=.array.i32 new(array, 100.i32).array.i32;

		ti0.i32:=.i32 0.i32;

		$1.lineLen[ti0.i32].i32 :=.array.i32 10.i32;

		ti1.i32:=.i32 0.i32;

		field2[ti1.i32].i32 :=.array.i32 0.i32;

		ti2.i32:=.i32 1.i32;

		field2[ti2.i32].i32 :=.array.i32 0.i32;

		ti3.i32:=.i32 2.i32;

		field2[ti3.i32].i32 :=.array.i32 1.i32;

		ti4.i32:=.i32 3.i32;

		field2[ti4.i32].i32 :=.array.i32 0.i32;

		ti5.i32:=.i32 4.i32;

		field2[ti5.i32].i32 :=.array.i32 0.i32;

		ti6.i32:=.i32 5.i32;

		field2[ti6.i32].i32 :=.array.i32 0.i32;

		ti7.i32:=.i32 6.i32;

		field2[ti7.i32].i32 :=.array.i32 0.i32;

		ti8.i32:=.i32 7.i32;

		field2[ti8.i32].i32 :=.array.i32 0.i32;

		ti9.i32:=.i32 8.i32;

		field2[ti9.i32].i32 :=.array.i32 0.i32;

		ti10.i32:=.i32 9.i32;

		field2[ti10.i32].i32 :=.array.i32 0.i32;

		ti11.i32:=.i32 10.i32;

		field2[ti11.i32].i32 :=.array.i32 1.i32;

		ti12.i32:=.i32 11.i32;

		field2[ti12.i32].i32 :=.array.i32 0.i32;

		ti13.i32:=.i32 12.i32;

		field2[ti13.i32].i32 :=.array.i32 1.i32;

		ti14.i32:=.i32 13.i32;

		field2[ti14.i32].i32 :=.array.i32 0.i32;

		ti15.i32:=.i32 14.i32;

		field2[ti15.i32].i32 :=.array.i32 0.i32;

		ti16.i32:=.i32 15.i32;

		field2[ti16.i32].i32 :=.array.i32 0.i32;

		ti17.i32:=.i32 16.i32;

		field2[ti17.i32].i32 :=.array.i32 0.i32;

		ti18.i32:=.i32 17.i32;

		field2[ti18.i32].i32 :=.array.i32 0.i32;

		ti19.i32:=.i32 18.i32;

		field2[ti19.i32].i32 :=.array.i32 0.i32;

		ti20.i32:=.i32 19.i32;

		field2[ti20.i32].i32 :=.array.i32 0.i32;

		ti21.i32:=.i32 20.i32;

		field2[ti21.i32].i32 :=.array.i32 0.i32;

		ti22.i32:=.i32 21.i32;

		field2[ti22.i32].i32 :=.array.i32 1.i32;

		ti23.i32:=.i32 22.i32;

		field2[ti23.i32].i32 :=.array.i32 1.i32;

		ti24.i32:=.i32 23.i32;

		field2[ti24.i32].i32 :=.array.i32 0.i32;

		ti25.i32:=.i32 24.i32;

		field2[ti25.i32].i32 :=.array.i32 0.i32;

		ti26.i32:=.i32 25.i32;

		field2[ti26.i32].i32 :=.array.i32 0.i32;

		ti27.i32:=.i32 26.i32;

		field2[ti27.i32].i32 :=.array.i32 0.i32;

		ti28.i32:=.i32 27.i32;

		field2[ti28.i32].i32 :=.array.i32 0.i32;

		ti29.i32:=.i32 28.i32;

		field2[ti29.i32].i32 :=.array.i32 0.i32;

		ti30.i32:=.i32 29.i32;

		field2[ti30.i32].i32 :=.array.i32 0.i32;

		ti31.i32:=.i32 30.i32;

		field2[ti31.i32].i32 :=.array.i32 0.i32;

		ti32.i32:=.i32 31.i32;

		field2[ti32.i32].i32 :=.array.i32 0.i32;

		ti33.i32:=.i32 32.i32;

		field2[ti33.i32].i32 :=.array.i32 0.i32;

		ti34.i32:=.i32 33.i32;

		field2[ti34.i32].i32 :=.array.i32 0.i32;

		ti35.i32:=.i32 34.i32;

		field2[ti35.i32].i32 :=.array.i32 0.i32;

		ti36.i32:=.i32 35.i32;

		field2[ti36.i32].i32 :=.array.i32 0.i32;

		ti37.i32:=.i32 36.i32;

		field2[ti37.i32].i32 :=.array.i32 0.i32;

		ti38.i32:=.i32 37.i32;

		field2[ti38.i32].i32 :=.array.i32 0.i32;

		ti39.i32:=.i32 38.i32;

		field2[ti39.i32].i32 :=.array.i32 0.i32;

		ti40.i32:=.i32 39.i32;

		field2[ti40.i32].i32 :=.array.i32 0.i32;

		ti41.i32:=.i32 40.i32;

		field2[ti41.i32].i32 :=.array.i32 0.i32;

		ti42.i32:=.i32 41.i32;

		field2[ti42.i32].i32 :=.array.i32 0.i32;

		ti43.i32:=.i32 42.i32;

		field2[ti43.i32].i32 :=.array.i32 0.i32;

		ti44.i32:=.i32 43.i32;

		field2[ti44.i32].i32 :=.array.i32 0.i32;

		ti45.i32:=.i32 44.i32;

		field2[ti45.i32].i32 :=.array.i32 0.i32;

		ti46.i32:=.i32 45.i32;

		field2[ti46.i32].i32 :=.array.i32 0.i32;

		ti47.i32:=.i32 46.i32;

		field2[ti47.i32].i32 :=.array.i32 0.i32;

		ti48.i32:=.i32 47.i32;

		field2[ti48.i32].i32 :=.array.i32 0.i32;

		ti49.i32:=.i32 48.i32;

		field2[ti49.i32].i32 :=.array.i32 0.i32;

		ti50.i32:=.i32 49.i32;

		field2[ti50.i32].i32 :=.array.i32 0.i32;

		ti51.i32:=.i32 50.i32;

		field2[ti51.i32].i32 :=.array.i32 0.i32;

		ti52.i32:=.i32 51.i32;

		field2[ti52.i32].i32 :=.array.i32 0.i32;

		ti53.i32:=.i32 52.i32;

		field2[ti53.i32].i32 :=.array.i32 0.i32;

		ti54.i32:=.i32 53.i32;

		field2[ti54.i32].i32 :=.array.i32 0.i32;

		ti55.i32:=.i32 54.i32;

		field2[ti55.i32].i32 :=.array.i32 0.i32;

		ti56.i32:=.i32 55.i32;

		field2[ti56.i32].i32 :=.array.i32 0.i32;

		ti57.i32:=.i32 56.i32;

		field2[ti57.i32].i32 :=.array.i32 0.i32;

		ti58.i32:=.i32 57.i32;

		field2[ti58.i32].i32 :=.array.i32 0.i32;

		ti59.i32:=.i32 58.i32;

		field2[ti59.i32].i32 :=.array.i32 0.i32;

		ti60.i32:=.i32 59.i32;

		field2[ti60.i32].i32 :=.array.i32 0.i32;

		ti61.i32:=.i32 60.i32;

		field2[ti61.i32].i32 :=.array.i32 0.i32;

		ti62.i32:=.i32 61.i32;

		field2[ti62.i32].i32 :=.array.i32 0.i32;

		ti63.i32:=.i32 62.i32;

		field2[ti63.i32].i32 :=.array.i32 0.i32;

		ti64.i32:=.i32 63.i32;

		field2[ti64.i32].i32 :=.array.i32 0.i32;

		ti65.i32:=.i32 64.i32;

		field2[ti65.i32].i32 :=.array.i32 0.i32;

		ti66.i32:=.i32 65.i32;

		field2[ti66.i32].i32 :=.array.i32 0.i32;

		ti67.i32:=.i32 66.i32;

		field2[ti67.i32].i32 :=.array.i32 0.i32;

		ti68.i32:=.i32 67.i32;

		field2[ti68.i32].i32 :=.array.i32 0.i32;

		ti69.i32:=.i32 68.i32;

		field2[ti69.i32].i32 :=.array.i32 0.i32;

		ti70.i32:=.i32 69.i32;

		field2[ti70.i32].i32 :=.array.i32 0.i32;

		ti71.i32:=.i32 70.i32;

		field2[ti71.i32].i32 :=.array.i32 0.i32;

		ti72.i32:=.i32 71.i32;

		field2[ti72.i32].i32 :=.array.i32 0.i32;

		ti73.i32:=.i32 72.i32;

		field2[ti73.i32].i32 :=.array.i32 0.i32;

		ti74.i32:=.i32 73.i32;

		field2[ti74.i32].i32 :=.array.i32 0.i32;

		ti75.i32:=.i32 74.i32;

		field2[ti75.i32].i32 :=.array.i32 0.i32;

		ti76.i32:=.i32 75.i32;

		field2[ti76.i32].i32 :=.array.i32 0.i32;

		ti77.i32:=.i32 76.i32;

		field2[ti77.i32].i32 :=.array.i32 0.i32;

		ti78.i32:=.i32 77.i32;

		field2[ti78.i32].i32 :=.array.i32 0.i32;

		ti79.i32:=.i32 78.i32;

		field2[ti79.i32].i32 :=.array.i32 0.i32;

		ti80.i32:=.i32 79.i32;

		field2[ti80.i32].i32 :=.array.i32 0.i32;

		ti81.i32:=.i32 80.i32;

		field2[ti81.i32].i32 :=.array.i32 0.i32;

		ti82.i32:=.i32 81.i32;

		field2[ti82.i32].i32 :=.array.i32 0.i32;

		ti83.i32:=.i32 82.i32;

		field2[ti83.i32].i32 :=.array.i32 0.i32;

		ti84.i32:=.i32 83.i32;

		field2[ti84.i32].i32 :=.array.i32 0.i32;

		ti85.i32:=.i32 84.i32;

		field2[ti85.i32].i32 :=.array.i32 0.i32;

		ti86.i32:=.i32 85.i32;

		field2[ti86.i32].i32 :=.array.i32 0.i32;

		ti87.i32:=.i32 86.i32;

		field2[ti87.i32].i32 :=.array.i32 0.i32;

		ti88.i32:=.i32 87.i32;

		field2[ti88.i32].i32 :=.array.i32 0.i32;

		ti89.i32:=.i32 88.i32;

		field2[ti89.i32].i32 :=.array.i32 0.i32;

		ti90.i32:=.i32 89.i32;

		field2[ti90.i32].i32 :=.array.i32 0.i32;

		ti91.i32:=.i32 90.i32;

		field2[ti91.i32].i32 :=.array.i32 0.i32;

		ti92.i32:=.i32 91.i32;

		field2[ti92.i32].i32 :=.array.i32 0.i32;

		ti93.i32:=.i32 92.i32;

		field2[ti93.i32].i32 :=.array.i32 0.i32;

		ti94.i32:=.i32 93.i32;

		field2[ti94.i32].i32 :=.array.i32 0.i32;

		ti95.i32:=.i32 94.i32;

		field2[ti95.i32].i32 :=.array.i32 0.i32;

		ti96.i32:=.i32 95.i32;

		field2[ti96.i32].i32 :=.array.i32 0.i32;

		ti97.i32:=.i32 96.i32;

		field2[ti97.i32].i32 :=.array.i32 0.i32;

		ti98.i32:=.i32 97.i32;

		field2[ti98.i32].i32 :=.array.i32 0.i32;

		ti99.i32:=.i32 98.i32;

		field2[ti99.i32].i32 :=.array.i32 0.i32;

		ti100.i32:=.i32 99.i32;

		field2[ti100.i32].i32 :=.array.i32 0.i32;

		ti101.i32 :=.i32 field2.array.i32;

		ret.i32 ti101.i32;

		}

	.method public update().bool {

		ti0.i32 :=.i32 arraylength(field2.array.i32).i32;

		newfield2.array.i32 :=.array.i32 new(array, ti0.i32).array.i32;

		i.i32 :=.i32 0.i32;

		Loop2:

		ti1.i32 :=.i32 arraylength(field2.array.i32).i32;

		ui2.i32 :=.i32 ti1.i32;

		if ( i.i32 <.i32 ui2.i32) goto Body2;

		goto EndLoop2;

		Body2:

		ti3.i32 :=.i32 field2[i.i32].i32;

		cur.i32 :=.i32 ti3.i32;

		ti4.i32 :=.i32  invokevirtual (this,"getLiveNeighborN",i.i32).i32;

		ti5.i32 :=.i32 ti4.i32;

		neighN.i32 :=.i32 ti5.i32;

		tb6.bool :=.bool cur.i32 <.i32 1.i32;

		if ( tb6.bool !.bool tb6.bool ) goto bodyIf0;

		ti7.i32 :=.i32 getfield(this, REPRODUCE_NUM.i32).i32;

		tb8.bool :=.bool  invokevirtual (this,"eq",neighN.i32,ti7.i32).bool;

		if ( tb8.bool &&.bool 1.bool ) goto bodyIf1;

		ti9.i32:=.i32 i.i32;

		ti10.array.i32 :=.array.i32 field2[i.i32].i32;

		newfield2[ti9.i32].i32 :=.array.i32 ti10.array.i32;

		goto endif1;

		bodyIf1: 

		ti11.i32:=.i32 i.i32;

		newfield2[ti11.i32].i32 :=.array.i32 1.i32;

		endif1:

		goto endif0;

		bodyIf0: 

		ti12.i32 :=.i32 getfield(this, UNDERPOP_LIM.i32).i32;

		tb13.bool :=.bool  invokevirtual (this,"ge",neighN.i32,ti12.i32).bool;

		tb14.bool :=.bool tb13.bool;

		ti15.i32 :=.i32 getfield(this, OVERPOP_LIM.i32).i32;

		tb16.bool :=.bool  invokevirtual (this,"le",neighN.i32,ti15.i32).bool;

		ub17.bool :=.bool tb16.bool;

		goodPop.bool :=.bool tb14.bool &&.bool ub17.bool;

		if ( goodPop.bool !.bool goodPop.bool ) goto bodyIf2;

		ti18.i32:=.i32 i.i32;

		ti19.array.i32 :=.array.i32 field2[i.i32].i32;

		newfield2[ti18.i32].i32 :=.array.i32 ti19.array.i32;

		goto endif2;

		bodyIf2: 

		ti20.i32:=.i32 i.i32;

		newfield2[ti20.i32].i32 :=.array.i32 0.i32;

		endif2:

		endif0:

		i.i32 :=.i32 i.i32 +.i32 1.i32;

		goto Loop2;

		EndLoop2:

		tb22.bool :=.bool 1.bool;

		ret.bool tb22.bool;

		}

	.method public printfield2().bool {

		i.i32 :=.i32 0.i32;

		j.i32 :=.i32 0.i32;

		Loop3:

		ti0.i32 :=.i32 arraylength(field2.array.i32).i32;

		ui1.i32 :=.i32 ti0.i32;

		if ( i.i32 <.i32 ui1.i32) goto Body3;

		goto EndLoop3;

		Body3:

		ti2.i32 :=.i32 getfield(this, xMax.i32).i32;

		tb3.bool :=.bool  invokevirtual (this,"gt",j.i32,ti2.i32).bool;

		if ( tb3.bool &&.bool 1.bool ) goto bodyIf3;

		goto endif3;

		bodyIf3: 

		invokestatic (io, "println").V;

		j.i32 :=.i32 0.i32;

		endif3:

		ti6.i32 :=.i32 i.i32;

		ti7.i32 :=.i32 field2[ti6.i32].i32;

		invokestatic (io, "print", ti7.i32).V;

		i.i32 :=.i32 i.i32 +.i32 1.i32;

		j.i32 :=.i32 j.i32 +.i32 1.i32;

		goto Loop3;

		EndLoop3:

		invokestatic (io, "println").V;

		invokestatic (io, "println").V;

		tb10.bool :=.bool 1.bool;

		ret.bool tb10.bool;

		}

	.method public trIdx(x.i32,y.i32).i32 {

		ti0.i32 :=.i32 getfield(this, xMax.i32).i32;

		ti1.i32 :=.i32 ti0.i32 +.i32 1.i32;

		ui2.i32 :=.i32 ti1.i32 *.i32 $2.y.i32;

		ti3.i32 :=.i32 $1.x.i32 +.i32 ui2.i32;

		ret.i32 ti3.i32;

		}

	.method public cartIdx(absPos.i32).i32 {

		ti0.i32 :=.i32 getfield(this, xMax.i32).i32;

		xLim.i32 :=.i32 ti0.i32 +.i32 1.i32;

		y.i32 :=.i32 $1.absPos.i32 /.i32 xLim.i32;

		ui1.i32 :=.i32 y.i32 *.i32 xLim.i32;

		x.i32 :=.i32 $1.absPos.i32 -.i32 ui1.i32;

		result.array.i32 :=.array.i32 new(array, 2.i32).array.i32;

		ti2.i32:=.i32 0.i32;

		result[ti2.i32].i32 :=.array.i32 x.i32;

		ti3.i32:=.i32 1.i32;

		result[ti3.i32].i32 :=.array.i32 y.i32;

		ti4.i32 :=.i32 result.array.i32;

		ret.i32 ti4.i32;

		}

	.method public getNeighborCoords(absPos.i32).i32 {

		ti0.i32 :=.i32  invokevirtual (this,"cartIdx",$1.absPos.i32).i32;

		ti1.array.i32 :=.array.i32 ti0.i32;

		cart.array.i32 :=.array.i32 ti1.array.i32;

		ti2.i32 :=.i32 0.i32;

		ti3.i32 :=.i32 cart[ti2.i32].i32;

		x.i32 :=.i32 ti3.i32;

		ti4.i32 :=.i32 1.i32;

		ti5.i32 :=.i32 cart[ti4.i32].i32;

		y.i32 :=.i32 ti5.i32;

		ti6.i32 :=.i32 getfield(this, xMax.i32).i32;

		if ( x.i32 <.i32 ti6.i32 ) goto bodyIf4;

		downX.i32 :=.i32 0.i32;

		upX.i32 :=.i32 x.i32 -.i32 1.i32;

		goto endif4;

		bodyIf4: 

		downX.i32 :=.i32 x.i32 +.i32 1.i32;

		tb7.bool :=.bool  invokevirtual (this,"gt",x.i32,0.i32).bool;

		if ( tb7.bool &&.bool 1.bool ) goto bodyIf5;

		upX.i32 :=.i32 ti8.i32;

		goto endif5;

		bodyIf5: 

		upX.i32 :=.i32 x.i32 -.i32 1.i32;

		endif5:

		endif4:

		ti9.i32 :=.i32 getfield(this, yMax.i32).i32;

		if ( y.i32 <.i32 ti9.i32 ) goto bodyIf6;

		downY.i32 :=.i32 0.i32;

		upY.i32 :=.i32 y.i32 -.i32 1.i32;

		goto endif6;

		bodyIf6: 

		downY.i32 :=.i32 y.i32 +.i32 1.i32;

		tb10.bool :=.bool  invokevirtual (this,"gt",y.i32,0.i32).bool;

		if ( tb10.bool &&.bool 1.bool ) goto bodyIf7;

		upY.i32 :=.i32 ti11.i32;

		goto endif7;

		bodyIf7: 

		upY.i32 :=.i32 y.i32 -.i32 1.i32;

		endif7:

		endif6:

		result.array.i32 :=.array.i32 new(array, 8.i32).array.i32;

		ti12.i32:=.i32 0.i32;

		ti13.i32 :=.i32  invokevirtual (this,"trIdx",x.i32,upY.i32).i32;

		ti14.array.i32 :=.array.i32 ti13.i32;

		result[ti12.i32].i32 :=.array.i32 ti14.array.i32;

		ti15.i32:=.i32 1.i32;

		ti16.i32 :=.i32  invokevirtual (this,"trIdx",upX.i32,upY.i32).i32;

		ti17.array.i32 :=.array.i32 ti16.i32;

		result[ti15.i32].i32 :=.array.i32 ti17.array.i32;

		ti18.i32:=.i32 2.i32;

		ti19.i32 :=.i32  invokevirtual (this,"trIdx",upX.i32,y.i32).i32;

		ti20.array.i32 :=.array.i32 ti19.i32;

		result[ti18.i32].i32 :=.array.i32 ti20.array.i32;

		ti21.i32:=.i32 3.i32;

		ti22.i32 :=.i32  invokevirtual (this,"trIdx",upX.i32,downY.i32).i32;

		ti23.array.i32 :=.array.i32 ti22.i32;

		result[ti21.i32].i32 :=.array.i32 ti23.array.i32;

		ti24.i32:=.i32 4.i32;

		ti25.i32 :=.i32  invokevirtual (this,"trIdx",x.i32,downY.i32).i32;

		ti26.array.i32 :=.array.i32 ti25.i32;

		result[ti24.i32].i32 :=.array.i32 ti26.array.i32;

		ti27.i32:=.i32 5.i32;

		ti28.i32 :=.i32  invokevirtual (this,"trIdx",downX.i32,downY.i32).i32;

		ti29.array.i32 :=.array.i32 ti28.i32;

		result[ti27.i32].i32 :=.array.i32 ti29.array.i32;

		ti30.i32:=.i32 6.i32;

		ti31.i32 :=.i32  invokevirtual (this,"trIdx",downX.i32,y.i32).i32;

		ti32.array.i32 :=.array.i32 ti31.i32;

		result[ti30.i32].i32 :=.array.i32 ti32.array.i32;

		ti33.i32:=.i32 7.i32;

		ti34.i32 :=.i32  invokevirtual (this,"trIdx",downX.i32,upY.i32).i32;

		ti35.array.i32 :=.array.i32 ti34.i32;

		result[ti33.i32].i32 :=.array.i32 ti35.array.i32;

		ti36.i32 :=.i32 result.array.i32;

		ret.i32 ti36.i32;

		}

	.method public getLiveNeighborN(absPos.i32).i32 {

		result.i32 :=.i32 0.i32;

		ti0.i32 :=.i32  invokevirtual (this,"getNeighborCoords",$1.absPos.i32).i32;

		ti1.array.i32 :=.array.i32 ti0.i32;

		neigh.array.i32 :=.array.i32 ti1.array.i32;

		i.i32 :=.i32 0.i32;

		Loop4:

		ti2.i32 :=.i32 arraylength(neigh.array.i32).i32;

		ui3.i32 :=.i32 ti2.i32;

		if ( i.i32 <.i32 ui3.i32) goto Body4;

		goto EndLoop4;

		Body4:

		ti4.i32 :=.i32 field2[neigh.array.i32].i32;

		tb5.bool :=.bool  invokevirtual (this,"ne",ti4.i32,0.i32).bool;

		if ( tb5.bool &&.bool 1.bool ) goto bodyIf8;

		goto endif8;

		bodyIf8: 

		result.i32 :=.i32 result.i32 +.i32 1.i32;

		endif8:

		i.i32 :=.i32 i.i32 +.i32 1.i32;

		goto Loop4;

		EndLoop4:

		ti6.i32 :=.i32 result.i32;

		ret.i32 ti6.i32;

		}

	.method public busyWait(ms.i32).bool {

		ti0.i32 :=.i32 getfield(this, LOOPS_PER_MS.i32).i32;

		n.i32 :=.i32 $1.ms.i32 *.i32 ti0.i32;

		i.i32 :=.i32 0.i32;

		Loop5:

		if ( i.i32 <.i32 n.i32) goto Body5;

		goto EndLoop5;

		Body5:

		i.i32 :=.i32 i.i32 +.i32 1.i32;

		goto Loop5;

		EndLoop5:

		tb1.bool :=.bool 1.bool;

		ret.bool tb1.bool;

		}

	.method public eq(a.i32,b.i32).bool {

		ti0.i32 :=.i32  invokevirtual (this,"lt",$1.a.i32,$2.b.i32).i32;

		tb1.bool :=.bool ti0.i32;

		tb2.bool :=.bool tb1.bool !.bool tb1.bool;

		ti3.i32 :=.i32  invokevirtual (this,"lt",$2.b.i32,$1.a.i32).i32;

		tb4.bool :=.bool ti3.i32;

		ub5.bool :=.bool tb4.bool !.bool tb4.bool;

		tb6.bool :=.bool tb2.bool &&.bool ub5.bool;

		ret.bool tb6.bool;

		}

	.method public ne(a.i32,b.i32).bool {

		ti0.i32 :=.i32  invokevirtual (this,"eq",$1.a.i32,$2.b.i32).i32;

		tb1.bool :=.bool ti0.i32;

		tb2.bool :=.bool tb1.bool !.bool tb1.bool;

		ret.bool tb2.bool;

		}

	.method public lt(a.i32,b.i32).bool {

		tb0.bool :=.bool $1.a.i32 <.i32 $2.b.i32;

		ret.bool tb0.bool;

		}

	.method public le(a.i32,b.i32).bool {

		ti0.i32 :=.i32  invokevirtual (this,"lt",$1.a.i32,$2.b.i32).i32;

		tb1.bool :=.bool ti0.i32;

		tb2.bool :=.bool tb1.bool !.bool tb1.bool;

		ti3.i32 :=.i32  invokevirtual (this,"eq",$1.a.i32,$2.b.i32).i32;

		tb4.bool :=.bool ti3.i32;

		ub5.bool :=.bool tb4.bool !.bool tb4.bool;

		tb6.bool :=.bool tb2.bool &&.bool ub5.bool;

		tb7.bool :=.bool tb6.bool !.bool tb6.bool;

		ret.bool tb7.bool;

		}

	.method public gt(a.i32,b.i32).bool {

		ti0.i32 :=.i32  invokevirtual (this,"le",$1.a.i32,$2.b.i32).i32;

		tb1.bool :=.bool ti0.i32;

		tb2.bool :=.bool tb1.bool !.bool tb1.bool;

		ret.bool tb2.bool;

		}

	.method public ge(a.i32,b.i32).bool {

		ti0.i32 :=.i32  invokevirtual (this,"gt",$1.a.i32,$2.b.i32).i32;

		tb1.bool :=.bool ti0.i32;

		tb2.bool :=.bool tb1.bool !.bool tb1.bool;

		ti3.i32 :=.i32  invokevirtual (this,"eq",$1.a.i32,$2.b.i32).i32;

		tb4.bool :=.bool ti3.i32;

		ub5.bool :=.bool tb4.bool !.bool tb4.bool;

		tb6.bool :=.bool tb2.bool &&.bool ub5.bool;

		tb7.bool :=.bool tb6.bool !.bool tb6.bool;

		ret.bool tb7.bool;

		}

	}

