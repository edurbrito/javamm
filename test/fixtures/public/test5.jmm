/*
Tests:
    extra features:
    import constructors with arguments and void functions
    'less than' with 0 value

    Optimizations
        -o : constants use and while jumps
        -r
*/


import io.println;

class test5 {

    int atr1;

    public int f1(boolean c) {
        if (c) {
            atr1 = 5;
        } else {
            atr1 = 10;
        }
        return 0;
    }

    public int f2(int a) {
        int i;
        int w;
        w = 0;
        if (true) {
            w = 1;
        } else if (true) {
            w = 2;
        } else {
            while (w < 1) {
                i = 2;
            }
        }
        return w;
    }

    public int f3() {
        int i;
        int w;
        w = 100;
        i = 0;

        if (i < 2) {
            w = 1;
        } else {
            if (w < 0) {
                w = 2;
            } else {
                w = 5;
            }
            w = 3;
        }
        return w;
    }

    public int f4(boolean a) {

        while (a) {
            this.f3();
        }
        return 0;
    }

    public int f5() {
        int a;
        int b;
        int c;
        int d;
        int e;
        int f;
        f = 1;
        d = f;
        f = 2;
        e = 1;
        a = 1 + d + e;
        b = 2;
        c = 3 + b + e + d;
        return 0;
    }

    public int f6(int a) {
        int c;
        c = a;
        io.println(c);
        return 0;
    }

    public int f7() {
        int a;
        int b;
        a = 2;
        b = 2*3 + 4/a +1;
        a = 4;
        b = a +2;
        this.f6(a+8);
        this.f6(a);
        io.func(a);
        return a;
    }

    public int foo() {
        int i1;
        int a;
        int b;
        int c;
        boolean flag;
        flag = false;
        a = 2;
        b = 2 * 3 + 4 / a + 1;
        a = 4;
        b = a + 2;
        this.f2(a + 8);
        this.f2(a + b);
        c = this.f7();
        this.f1(true);
        this.f3();
        this.f4(flag);
        this.f5();
        return 0;
    }

    public static void main(String[] args) {

        test5 x;
        x = new test5();
        x.foo();

    }

}