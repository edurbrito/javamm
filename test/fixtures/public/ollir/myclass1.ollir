myClass {
	.construct myClass().V{
		invokespecial(this, "<init>").V;
	}

    .method public static main(args.array.String).V {
        mc.myClass :=.myClass new(myClass).myClass;
        invokespecial(mc.myClass,"<init>").V;

        t1.i32 :=.i32 3.i32;
        C.array.i32 :=.array.i32 new(array, t1.i32).array.i32;

        i.i32 :=.i32 0.i32;
        C[i.i32].i32 :=.i32 3.i32;
        i.i32 :=.i32 1.i32;
        C[i.i32].i32 :=.i32 4.i32;
        i.i32 :=.i32 2.i32;
        C[i.i32].i32 :=.i32 5.i32;

	    t2.i32 :=.i32 invokevirtual(mc.myClass, "sum", C.array.i32).i32;
        invokestatic(io, "println", t2.i32).V;
	}
	
	.method public sum(A.array.i32).i32 {
		sum.i32 :=.i32 0.i32;
		i.i32 :=.i32 0.i32;
		
		Loop:
            t1.i32 :=.i32 arraylength($1.A.array.i32).i32;
            if (i.i32 >=.i32 t1.i32) goto End;
            t2.i32 :=.i32 $1.A[i.i32].i32;
            $1.A[i.i32].i32 :=.i32 2.i32;
            sum.i32 :=.i32 sum.i32 +.i32 t2.i32;
            i.i32 :=.i32 i.i32 +.i32 1.i32;
        goto Loop;
		End:

		ret.i32 sum.i32;
	}
}