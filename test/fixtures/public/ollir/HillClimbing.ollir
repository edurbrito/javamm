HillClimbing  {

	.field private best.i32;

	.field private num_iterations.i32;

	.construct HillClimbing().V {

		invokespecial(this, "<init>").V;

		}

	.method public score(sol.i32).i32 {

		abs.i32 :=.i32 $1.sol.i32 -.i32 500.i32;

		if ( abs.i32 <.i32 0.i32 ) goto bodyIf0;

		abs.i32 :=.i32 abs.i32;

		goto endif0;

		bodyIf0:

		abs.i32 :=.i32 0.i32 -.i32 abs.i32;

		endif0:

		result.i32 :=.i32 500.i32 -.i32 abs.i32;

		ti0.i32 :=.i32 result.i32;

		ret.i32 ti0.i32;

		}

	.method public execute().i32 {

		i.i32 :=.i32 0.i32;

		putfield(this,num_iterations.i32,200.i32).V;

		ti3.i32 :=.i32 invokestatic(MathUtils, "random", 0.i32, 1000.i32).i32;

		putfield(this,best.i32,ti3.i32).V;

		Loop1:

		ti4.i32 :=.i32 getfield(this, num_iterations.i32).i32;

		if ( i.i32 <.i32 ti4.i32) goto Body1;

		goto EndLoop1;

		Body1:

		ti6.i32 :=.i32 invokestatic(MathUtils, "random", 0.i32, 1000.i32).i32;

		sol.i32 :=.i32 ti6.i32;

		ti7.i32 :=.i32  invokevirtual(this,"score",sol.i32).i32;

		ti8.i32 :=.i32 ti7.i32;

		score_sol.i32 :=.i32 ti8.i32;

		ti9.i32 :=.i32 getfield(this, best.i32).i32;

		ti10.i32 :=.i32  invokevirtual(this,"score",ti9.i32).i32;

		ti11.i32 :=.i32 ti10.i32;

		score_best.i32 :=.i32 ti11.i32;

		if ( score_best.i32 <.i32 score_sol.i32 ) goto bodyIf1;

		ti13.i32 :=.i32 getfield(this, best.i32).i32;
		putfield(this,best.i32,ti13.i32).V;

		goto endif1;

		bodyIf1:

		putfield(this,best.i32,sol.i32).V;

		endif1:

		ti16.i32 :=.i32 getfield(this, best.i32).i32;

		invokestatic(io, "println", ti16.i32).V;

		i.i32 :=.i32 i.i32 +.i32 1.i32;

		goto Loop1;

		EndLoop1:

		ti19.i32 :=.i32 getfield(this, best.i32).i32;

		ti20.i32 :=.i32 ti19.i32;

		ret.i32 ti20.i32;

		}

	.method public static main(args.array.String).V {

		ti0.HillClimbing :=.HillClimbing new (HillClimbing).HillClimbing;

		invokespecial(ti0.HillClimbing,"<init>").V;

		h.HillClimbing :=.HillClimbing ti0.HillClimbing;

		invokevirtual(h.HillClimbing,"execute").i32;

		ret.V;

		}

	}